name: Publish Python 🐍 distribution 📦 to PyPI and TestPyPI

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      logLevel:
        description: "Log level"
        required: true
        default: "warning"
        type: choice
        options:
          - info
          - warning
          - debug

jobs:
  build_sdist:
    runs-on: ubuntu-latest
    name: Build source distribution and architecture-independent wheel
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Install/Upgrade pip
        run: python3 -m pip install --upgrade pip

      - name: Install pybind11
        run: python3 -m pip install "pybind11[global]"

      - name: Build sdist
        run: |
          python3 -m pip install setuptools wheel cmake pybind11 build
          python3 -m build --sdist
        env:
          BUILD_EXTENSION: no

      - name: Save sdist & wheel
        uses: actions/upload-artifact@v4
        with:
          name: dist-architecture-independent
          path: |
            dist/*.tar.gz

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-13, macos-latest]

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Install/Upgrade pip
        run: python3 -m pip install --upgrade pip

      - name: Install pybind11
        run: python3 -m pip install "pybind11[global]"

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.20.0
        env:
          BUILD_EXTENSION: yes
          CIBW_BEFORE_BUILD: "python3 -m pip install pybind11[global]"
          CIBW_SKIP: "*musllinux*"

      - name: Save wheels
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.os }}
          path: wheelhouse/*.whl

  publish-to-pypi:
    name: Publish Python 🐍 distribution 📦 to PyPI
    needs:
      - build_sdist
      - build_wheels
    runs-on: ubuntu-latest
    environment:
      name: release
      url: https://pypi.org/p/python-audio
    permissions:
      id-token: write
      attestations: write
      contents: write

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          pattern: dist-*
          merge-multiple: true
          path: dist

      - name: Attest provenance
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: dist/*

      - name: Publish distribution 📦 to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip_existing: true

  github-release:
    name: >-
      Sign the Python 🐍 distribution 📦 with Sigstore
      and upload them to GitHub Release
    needs:
      - publish-to-pypi
    runs-on: ubuntu-latest
  
    permissions:
      contents: write
      id-token: write
  
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v3
        with:
          path: dist/
      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v2.1.1
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create
          '${{ github.ref_name }}'
          --repo '${{ github.repository }}'
          --notes ""
      - name: Upload artifact signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release upload
          '${{ github.ref_name }}' dist/**
          --repo '${{ github.repository }}'

  publish-to-testpypi:
    name: Publish Python 🐍 distribution 📦 to TestPyPI
    needs:
      - build_sdist
      - build_wheels
    runs-on: ubuntu-latest
  
    environment:
      name: release-test
      url: https://test.pypi.org/p/python-audio
      
    permissions:
      id-token: write
      attestations: write
      contents: write
      
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          pattern: dist-*
          merge-multiple: true
          path: dist

      - name: Attest provenance
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: dist/*

      - name: Publish distribution 📦 to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          skip_existing: true
